# Force rebuild - langchain-ollama package needed
services:
  gpt-researcher:
    pull_policy: always
    image: gptresearcher/gpt-researcher
    build: 
      context: ./
      no_cache: true
    environment:
      # Ollama Configuration
      OPENAI_API_KEY: "ollama"
      OPENAI_BASE_URL: "http://host.docker.internal:11434/v1"
      OLLAMA_BASE_URL: "http://host.docker.internal:11434"
      
      # LLM Models (using your Ollama models)
      FAST_LLM: "ollama:gpt-oss:20b"
      SMART_LLM: "ollama:gpt-oss:20b"
      STRATEGIC_LLM: "ollama:gpt-oss:20b"
      
      # Embedding Model
      EMBEDDING: "ollama:snowflake-arctic-embed2"
      OLLAMA_EMBEDDING_MODEL: "snowflake-arctic-embed2"
      EMBEDDING_PROVIDER: "ollama"
      
      # Search Configuration
      TAVILY_API_KEY: "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"
      
      # GPT Researcher Configuration
      LOGGING_LEVEL: "INFO"
      PORT: "8000"
      
      # Optional API keys
      LANGCHAIN_API_KEY: ""
    extra_hosts:
      - "host.docker.internal:host-gateway"
    command: >
      /bin/sh -c "
      pip install langchain-ollama>=0.3.3 &&
      python -m uvicorn main:app --host 0.0.0.0 --port 8000
      "
    volumes:
      - ${PWD}/my-docs:/usr/src/app/my-docs:rw
      - ${PWD}/outputs:/usr/src/app/outputs:rw
      - ${PWD}/logs:/usr/src/app/logs:rw
    user: root
    restart: always
    ports:
      - 8067:8000
      
  gptr-nextjs:
    pull_policy: build
    image: gptresearcher/gptr-nextjs
    stdin_open: true
    environment:
      CHOKIDAR_USEPOLLING: "true"
      LOGGING_LEVEL: INFO
      NEXT_PUBLIC_GA_MEASUREMENT_ID: ${NEXT_PUBLIC_GA_MEASUREMENT_ID}
      NEXT_PUBLIC_GPTR_API_URL: ${NEXT_PUBLIC_GPTR_API_URL}
      PORT: 3037 
    build:
      dockerfile: Dockerfile.dev
      context: frontend/nextjs
    volumes:
      - /app/node_modules
      - ./frontend/nextjs:/app/src
      - ./frontend/nextjs/.next:/app/.next
      - ./outputs:/app/outputs
    restart: always
    ports:
      - 3037:3000

  gpt-researcher-tests:
    image: gptresearcher/gpt-researcher-tests
    build: ./
    environment: 
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      OPENAI_BASE_URL: ${OPENAI_BASE_URL}
      TAVILY_API_KEY: ${TAVILY_API_KEY}
      LANGCHAIN_API_KEY: ${LANGCHAIN_API_KEY}
      LOGGING_LEVEL: INFO
    profiles: ["test"]
    command: >
      /bin/sh -c "
      pip install pytest pytest-asyncio faiss-cpu &&
      python -m pytest tests/report-types.py &&
      python -m pytest tests/vector-store.py
      "
  
  discord-bot:
    build:
      context: ./docs/discord-bot
      dockerfile: Dockerfile.dev
    environment:
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_CLIENT_ID=${DISCORD_CLIENT_ID}
    volumes:
      - ./docs/discord-bot:/app
      - /app/node_modules
    ports:
      - 3039:3000
    profiles: ["discord"]
    restart: always
